/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: BCFTOOLS_VIEW {
        ext.args = '-Ob'
    }

    withName: 'LIST_CHROMS' {
        publishDir = [ enabled: false ]
    }

    withName: 'TABIX_.*' {
        publishDir = [ enabled: false ]
    }

    withName: 'GUNZIP' {
        publishDir = [ enabled: false ]
    }

    withName: '.*_PRE:.*' {
        publishDir = [
            path: { "${params.outdir}/admixpipe_pre/${task.process.tokenize(':')[-1].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*_POST:.*' {
        publishDir = [
            path: { "${params.outdir}/admixpipe_post/${task.process.tokenize(':')[-1].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: '.*SELECT_CANDIDATES:.*' {
        publishDir = [
            path: { "${params.outdir}/selected_loci/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FILTER_POSITIONS' {
        publishDir = [
            path: { "${params.outdir}/candidates" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GENERATE_CONSENSUS' {
        publishDir = [
            path: { "${params.outdir}/consensus" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'INFER_POPULATIONS' {
        publishDir = [
            path: { "${params.outdir}/admixpipe_pre/bestk" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*SNPIO.*' {
        publishDir = [
            path: { "${params.outdir}/snpio/${task.process.tokenize(':')[-1].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ADMIXTUREPIPELINE {
        ext.args = {
            def profiles = workflow.profile.tokenize(',')
            if ('test' in profiles || 'test_raw' in profiles || 'test_nobusco' in profiles) {
                "-R 1 -c 2"
            } else {
                "-R 20 -c 20"
            }
        }
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
